<%= render "shared/menu" %>

<div id="showUser" class="col-md-12" ng-app ng-controller="displayCtrl">
  <div class="main">	 
	<% if !@profile.nil? && !@profile.new_record? %>
	<%= render "shared/nav" %>
	<div class="clearfix"></div>
	<div class="row">
		<label class="col-md-5">Choose the data you want to export: </label>
		<div class="col-md-3">
			<select ng-model="csv">
				<option value="profileDoc">Profiles</option>
				<option value="visitor_surveys">Visitor Surveys</option>
				<option value="visitor_counts">Visitor Counts</option>
				<option value="sales_slips">Sales Slips</option>
				<option value="food_assistance">Food Assistance</option>
				<option value="credit_debit">Credit/Debit Sales</option>
				<option value="visitor_application">Vendor Applications</option>
				<option value="vendor_attendance">Vendor Attendance</option>
				<option value="market_events">Market Events</option>
				<option value="volunteers">Volunteers</option>
				<option value="metrics">Metrics</option>
			</select>
		</div>
		<div class="col-md-3">
			<a href="javascript:void(0)" ng-click="selectFile()" class="btn btn-default" id="file">Export</a>
		</div>
	</div>
	<div class="clearfix"></div>
	<div class="profile-header">
		<h2 ng-click="slide('#info')" class="title" >Profile Info <span ng-if="profile.FMC_member">FMC Member!</span></h2>
		<div class="profile-group" id="info">
			<h3><span>Summary</span></h3>
			<div class="row">
				<div class="col-md-7">
					<label>Name:</label><span class="val"><%= @profile.name %></span>
				</div>
				<div class="col-md-5">
					<label>Year Founded:</label><span class="val"><%= @profile.year %></span>
				</div>
			</div>
			<div class="clearfix"></div>
			<div class="row">
				<div class="col-md-7">
					<label>Location:</label><span class="val"><%= @profile.address %> <%= @profile.city %>, <%= @profile.state %> <%= @profile.zip %></span>
				</div>
				<div class="col-md-5">
					<label>County:</label><span class="val"><%= @profile.county %></span>
				</div>
			</div>
			<div class="clearfix"></div>
			<h3><span>Indicators for Impact</span></h3>
			<p>Farmers Markets as Leaders in Collaborative Food System Data Collection and Analysis.</p>
			<div class="row">
				<div class="col-md-6">
					<label>Operates year round?:</label><span class="val"><%= @profile.year_round ? "yes" : "no" %></span>
				</div>
				<div class="col-md-6">
					<label>FMC Member?:</label><span class="val"><%= @profile.FMC_member ? "yes" : "no" %></span>
				</div>
			</div>
			<div class="clearfix"></div>
			<div class="row">
				<div class="col-md-12">
					<label>Host Organization name:</label><span class="val"><%= @profile.host_name %> <%= @profile.incorporated != "Other" ? @profile.incorporated : @profile.incorporated_other %></span>
				</div>
			</div>
			<div ng-if="profile.mission_statement">
				<div class="clearfix"></div>
				<div class="row">
					<div class="col-md-3">
						<label ng-if="profile.when_ms">Published in <%= @profile.when_ms %></label>
					</div>
					<div class="col-md-9 val">
						<span ng-if="!profile.ms_none"><%= @profile.name %>'s mission statement can be found on
							<span ng-if="profile.ms_website">the market's webiste, </span>
							<span ng-if="profile.ms_manual">in the market's manual,  </span>
							<span ng-if="profile.ms_market_promos">in the market's promos, </span>
							<span ng-if="profile.ms_other">{{profile.ms_other_text}} </span>
						</span>
					</div>
				</div>		
			</div>
		</div>
	</div>
	<div class="profile-header" ng-if="mars.length > 0">
		<h2 ng-click="slide('#markets')" class="title" >Markets</h2>
		<div class="profile-group" id="markets">
			<div ng-repeat="market in markets">
				<div ng-if="market != [null,null,null]">
					<h3 ng-if="$index == 0"><span>Main Market</span></h3>
					<h3 ng-if="$index != 0"><span>Alternate Location #{{$index}}</span></h3>
					<div class="row">
						<div class="col-xs-4" ng-if="market[0] != null">
							<h5>Primary Seasonal Market</h5>
							<div class="date">Opening Date: {{market[0].start}}</div>
							<div class="date">Opening Date: {{market[0].end}}</div>
						</div>
						<div class="col-xs-4" ng-if="market[1] != null">
							<h5>Seperate Seasonal #1</h5>
							<div class="date">Opening Date: {{market[1].start}}</div>
							<div class="date">Opening Date: {{market[1].end}}</div>
						</div>
						<div class="col-xs-4" ng-if="market[2] != null">
							<h5>Seperate Seasonal #2</h5>
							<div class="date">Opening Date: {{market[2].start}}</div>
							<div class="date">Opening Date: {{market[2].end}}</div>
						</div>
					</div>
				</div>
				<div class="clearfix"></div>	
			</div>	
		</div>
	</div>
	<% end %>
  </div>

</div>
<%= render "shared/footer" %>
<script type="text/javascript">

var admin = <%= raw(@user.admin) %>;
var profile = <%= raw(@profile.to_json) %>;
var markets = <%= raw(@markets.to_json) %>;
var management = <%= raw(@management.to_json) %>;
var accessibility = <%= raw(@accessibility.to_json) %>;
var communities = <%= raw(@communities.to_json) %>;
var surveys = <%= raw(@surveys.to_json) %>;

var visitor_survey_sheet = '';
var visitor_count_sheet = '';
var sales_slip_sheet = '';

function gen_profiles(profiles){
	var finalVal = '';
	finalVal += '\n';
	var k;

	for (var i in profiles){
		var Tprofile = profiles[i].profile;
		var Tmarkets = profiles[i].markets;
		var Tmanagement = profiles[i].management;
		var Taccessibility = profiles[i].accessibility;
		var Tcommunities = profiles[i].community;

		for (var key in Tprofile) {k = '';if (Tprofile.hasOwnProperty(key)) {k = '"' + Tprofile[key] + '",';finalVal += k;}}
		for (var key in Tmarkets) {k = '';if (Tmarkets.hasOwnProperty(key) && key != 'profile_id') {k = '"' + Tmarkets[key] + '",';finalVal += k;}}
		for (var key in Tmanagement) {k = '';if (Tmanagement.hasOwnProperty(key) && key != 'profile_id') {k = '"' + Tmanagement[key] + '",';finalVal += k;}}
		for (var key in Taccessibility) {k = '';if (Taccessibility.hasOwnProperty(key) && key != 'profile_id') {k = '"' + Taccessibility[key] + '",';finalVal += k;}}
		for (var key in Tcommunities) {k = '';if (Tcommunities.hasOwnProperty(key) && key != 'profile_id') {k = '"' + Tcommunities[key] + '",';finalVal += k;}}
		finalVal += '\n';
	}

	return finalVal;
}


var food_list_heading = {
	Watermelon: "Watermelons",
    Wineberries: "Wineberries",
    PawPaws: "PawPaws",                  
    Peaches: "Peaches",                  
    Pears: "Pears",                    
    Plums: "Plums",                    
    Quince: "Quince",                   
    Raspberries: "Raspberries",
    Strawberries: "Strawberries",             
    Tangerines: "Tangerines",               
    Tayberries: "Tayberries",               
    Kumquats: "Kumquats",                 
    Lemons: "Lemons",                   
    Limes: "Limes",                    
    Mulberries: "Mulberries",               
    Oranges: "Oranges",                  
    Fejioas: "Fejioas",                  
    Figs: "Figs",                     
    Gooseberries: "Gooseberries",             
    Grapefruit: "Grapefruit",               
    Grapes: "Grapes",                   
    Honeydew_melons: "Honeydew Melons",          
    Apricots: "Apricots",                 
    Apriums: "Apriums",                  
    Asian_pears: "Asian Pears",
    Avocados: "Avocados",                 
    Blackberries: "Blackberries",             
    Blueberries: "Blueberries",
    Boysenberries: "Boysenberries",            
    Canary_melons: "Canary Melons",            
    Cantaloupes: "Cantaloupes",
    Cherimoyas: "Cherimoyas",               
    Cherries: "Cherries",                 
    Chestnuts: "Chestnuts",                
    Currants: "Currants",                 
    Dates: "Dates",                    
    Artichokes: "Artichokes",               
    Arugula: "Arugula",                  
    Asparagus: "Asparagus",                
    Beets: "Beets",                    
    Beet_greens: "Beet Greens",
    Bok_choy: "Bok Choy",                 
    Broccoli: "Broccoli",                 
    Broccoli_rabe: "Broccoli Rabe",            
    Brussels_sprouts: "Brussels Sprouts",         
    Cabbage: "Cabbage",                  
    Cardoons: "Cardoons",                 
    Carrots: "Carrots",                  
    Cauliflower: "Cauliflower",
    Celeriac: "Celeriac",                 
    Celery: "Celery",                   
    Chard: "Chard",                    
    Chicory: "Chicory",                  
    Chipilín: "Chipilín",                 
    Collards: "Collards",                 
    Cress: "Cress",                    
    Cucumbers: "Cucumbers",                
    Dandelion_greens: "Dandelion Greens",         
    Dry_beans: "Dry_beans",                
    Eggplant: "Eggplant",                 
    Fennel: "Fennel",                   
    Garlic_bulb: "Garlic Bulb",
    Garlic_scapes: "Garlic Scapes",            
    Green_beans: "Green Beans",
    Herbs_fresh: "Herbs Fresh",
    Hierbamora: "Hierbamora",               
    Horseradish: "Horseradish",
    Jicama: "Jicama",                   
    Kale: "Kale",                     
    Kohlrabi: "Kohlrabi",                 
    Lambs_quarters: "Lambs Quarters",           
    Leeks: "Leeks",                    
    Lettuce: "Lettuce",                  
    Lima_Beans: "Lima Beans",               
    Mushrooms: "Mushrooms",                
    Mustard_greens: "Mustard Greens",           
    Okra: "Okra",                     
    Onions: "Onions",                   
    Parsnips: "Parsnips",                 
    Peas: "Peas",                     
    Pea_shoots: "Pea Shoots",               
    Peppers_hot: "Peppers (hot)",
    Peppers_sweet: "Peppers (sweet)",            
    Pumpkins: "Pumpkins",                 
    Potatoes: "Potatoes",                 
    Purslane: "Purslane",                 
    Squash_summer: "Squash (summer)",            
    Squash_winter: "Squash (winter)",            
    Radishes: "Radishes",                 
    Rhubarb: "Rhubarb",                  
    Rutabagas: "Rutabagas",                
    Salsify: "Salsify",                  
    Scallions: "Scallions",                
    Shallots: "Shallots",                 
    Spinach: "Spinach",                  
    Sprouts: "Sprouts",                  
    Sunchokes: "Sunchokes",                
    Sweet_corn: "Sweet Corn",               
    Sweet_potatoes: "Sweet Potatoes",           
    Sweet_potato: "Sweet Potato",             
    Tomatillos: "Tomatillos",               
    Tomatoes: "Tomatoes",                 
    Turnips: "Turnips",                  
    Turnip_greens: "Turnip Greens",            
    Yacon: "Yacon",                    
    Fava_beans: "Fava Beans",               
    Jujubes: "Jujubes",                  
    Apples: "Apples"
};

function gen_surveys(data){
	var visitor_surveys = data['slips'];
	var zips = data['zips']

	var visitor_survey = '"Date",';
	var visitor_survey_heading = {
		name: "Market Name",
		yes7: "Dwtn Activities Yes",
		no7: "Dwtn Activities No",
		downtown_spent_morning: "Dwtn Spending Total",////?!!!!!!!!!!!
		downtown_spent_afternoon: "Dwtn Spending Avg",
		spent_morning: "Mkt Spending Morning",
		spent_afternoon: "Mkt Spending Afternoon",
		yes13: "First Visit Yes",
		no13: "First Visit No",
		every_week: "Every Week",
		every_other_week: "Every Other Week",
		every_month: "Every Month",
		less_than_month: "Less Than Month",
		bikes: "Bike",
		bus: "Bus",
		walking: "Walking",
		taxi: "Taxi",
		other_method: "Other Method",
		//home_zip: "Zip Codes"//probs delete

	};

	for (var key in visitor_surveys[0]) {
		if(key != 'profile_id' && key != 'id' && key != 'date'){
			if(key in food_list_heading) {
				key = '"' + food_list_heading[key] + '",';
				visitor_survey += key;
			}else if(key in visitor_survey_heading) {
				var k = '"' + visitor_survey_heading[key] + '",';
				if(key == 'bikes')
					k = "Personal Vehicle," + k;
				visitor_survey += k;
			}
		}
	}
	visitor_survey += '\n';

	for(var j in visitor_surveys){

		var survey = visitor_surveys[j];
		visitor_survey += survey.date + ',';
		for (var key in survey) {
			k = '';
			if ((food_list_heading.hasOwnProperty(key) || visitor_survey_heading.hasOwnProperty(key)) && key != 'profile_id' && key != 'id' && key != 'date') {
					k = '"' + survey[key] + '",';
					if(key == 'bikes')
						k = survey.yes28 + ',' + k;
					if((key == "downtown_spent_morning" || key == "downtown_spent_afternoon") && survey.yes7 == 0)
						k = "N/A,";
				visitor_survey += k;
			}
		}
		visitor_survey += '\n';
	}

	if(zips.length > 0)
		visitor_survey += '\n\nMarket, Date, Zip Code,, Count, Percentage\n';

	var set = [], cur_day = null; curr_prof = null, sum = 0;
	for(var i in zips){
		var z = zips[i];
		if(z.home_zip && parseInt(z.count) > 0){
			if(z.name != curr_prof){
				sect='';
				for(var j in set){
					sect += set[j][0] + ',%' + (100*(parseInt(set[j][1]) / sum)) + '\n';
				}
				visitor_survey += sect;
				console.log(sect);
				
				sum = parseInt(z.count);
				set = [[z.name+','+z.date+','+z.home_zip+','+z.count, z.count]];
				curr_prof = z.name;
			}else if(z.date != cur_day){
				sect='';
				for(var j in set){
					sect += set[j][0] + ',%' + (100*(parseInt(set[j][1]) / sum)) + '\n';
				}
				visitor_survey += sect;
				console.log(sect);

				sum = parseInt(z.count);
				set = [[z.name+','+z.date+','+z.home_zip+','+z.count, z.count]];
				cur_day = z.date;
			}else if(i + 1 == zips.length){
				sect='';
				for(var j in set){
					sect += set[j][0] + ',%' + (100*(parseInt(set[j][1]) / sum)) + '\n';
				}
				visitor_survey += sect;
				console.log(sect);
			}else{
				sum += parseInt(z.count);
				set.push([z.name+','+z.date+','+z.home_zip+','+z.count, z.count]);
			}		
		}
	}

	return visitor_survey;
}



function gen_slips (sales_slips) {
	var sales_slips_csv = 'Profile, Date, Total Sales,Farm Product Sales,Value-added sales,Ready-to-eat sales,Debit/credit sales,WIC FMNP sales,WIC CVV sales,Senior FMNP sales,SNAP/EBT sales,EBT transactions (#),Donated food (pounds),Donated food ($),Apples,Apricots,Apriums,Asian Pears,Blackberries,Blueberries,Boysenberries,Canary Melons,Cantaloupes,Cherimoyas,Cherries,Currants,Dates,Feijoas,Figs,Grapefruit,Grapes,Honeydew Melons,Jujubes,Mulberries,PawPaws,Peaches,Pears,Plums,Quince,Raspberries,Strawberries,Tayberries,Watermelon,Wineberries,Artichokes,Arugula,Asparagus,"Beans, Green","Beans, Dry",Beets,Beet Greens,Bok Choy,Broccoli,Broccoli Rabe,Brussels Sprouts,"Cabbage",Cardoons,Carrots,Cauliflower,Celeriac,Celery ,Chard,Chicory,Chipilin,Collards,"Corn, Sweet",Cress,Cucumbers,Dandelion Greens,Eggplant,Fava Beans,Fennel ,Garlic Bulb,Garlic Scapes,"Herbs, Fresh",Hierbamora,Horseradish,Jicama,Kale,Kohlrabi,Lambs Quarters,Leeks,Lettuce,Lima Beans,Mushrooms,Mustard Greens,Okra,Onions,Parsnips,Peas,"Peppers, Hot","Peppers, (sweet)",Potatoes,Pumpkins,Purslane,Radishes,Rhubarb,Rutabagas,Salsify,Scallions,Shallots,Spinach,Sprouts,"Squash, Summer","Squash, Winter",Sunchokes,Sweet Potatoes,Sweet Potato Greens,Tomatillos,Tomatoes,Turnips,Turnip Greens,Yacon\n';
	var v1, v2, v3, curf;
	var food_list_heading_add = food_list_heading;
	food_list_heading_add.Watermelons = "Watermelons";
	food_list_heading_add.Sweet_potato_greens = "Sweet potato greens"

	var sales_slip_heading = {
		Debt_sales: "Debit/credit Sales",
		SNAP_sales: "SNAP/EBT Sales",
		SNAP_transactions: "EBT transactions",
		Senior_FMNP_sales: "Senior FMNP Sales",
		WIC_FMNP_sales: "WIC FNMP Sales",
		WIC_sales: "WIC CVV Sales",
		farm_sales: "Farm Product Sales",
		pounds_donated: "Donated Food (lbs)",
		ready_sales: "Ready-to-eat Sales",
		total_sales: "Total Sales",
		value_sales: "Value-added Sales",
		values_donated: "Donated Food ($)",
		//don't forget vegetables, date, name and count

	};


	for(var i = 0; i < sales_slips.length; i++){
		var prof = sales_slips[i];
		if(!prof.slips && prof.slips.length == 0)
			continue;

		for(var j = 0; j < prof.slips.length; j++){
			var day = prof.slips[j];
			if(day.length == 0)
				continue;

			for(var k = 0; k < day.length; k++){
				var a = day[k];
				v1 = a.veg1;
				v2 = a.veg2;
				v3 = a.veg3;

				for(var l in food_list_heading){
					curf = food_list_heading[l];
					a[l] = (v1 == curf || v2 == curf || v3 == curf) ? 1 : 0;
				}
				sales_slips_csv += prof.name+','+day[0].date+','+a.total_sales+','+a.farm_sales+','+a.value_sales+','+a.ready_sales+','+a.Debt_sales+','+a.WIC_FMNP_sales+','+a.WIC_sales+','+a.Senior_FMNP_sales+','+a.SNAP_sales+','+a.SNAP_transactions+','+a.pounds_donated+','+a.values_donated+','+a.Apples+','+a.Apricots+','+a.Apriums+','+a.Asian_pears+','+a.Blackberries+','+a.Blueberries+','+a.Boysenberries+','+a.Canary_melons+','+a.Cantaloupes+','+a.Cherimoyas+','+a.Cherries+','+a.Currants+','+a.Dates+','+a.Fejioas+','+a.Figs+','+a.Grapefruit+','+a.Grapes+','+a.Honeydew_melons+','+a.Jujubes+','+a.Mulberries+','+a.PawPaws+','+a.Peaches+','+a.Pears+','+a.Plums+','+a.Quince+','+a.Raspberries+','+a.Strawberries+','+a.Tayberries+','+a.Watermelons+','+a.Wineberries+','+a.Artichokes+','+a.Arugula+','+a.Asparagus+','+a.Green_beans+','+a.Dry_beans+','+a.Beets+','+a.Beet_greens+','+a.Bok_choy+','+a.Broccoli+','+a.Broccoli_rabe+','+a.Brussels_sprouts+','+a.Cabbage+','+a.Cardoons+','+a.Carrots+','+a.Cauliflower+','+a.Celeriac+','+a.Celery+','+a.Chard+','+a.Chicory+','+a.Chipilín+','+a.Collards+','+a.Sweet_corn+','+a.Cress+','+a.Cucumbers+','+a.Dandelion_greens+','+a.Eggplant+','+a.Fava_beans+','+a.Fennel+','+a.Garlic_bulb+','+a.Garlic_scapes+','+a.Herbs_fresh+','+a.Hierbamora+','+a.Horseradish+','+a.Jicama+','+a.Kale+','+a.Kohlrabi+','+a.Lambs_quarters+','+a.Leeks+','+a.Lettuce+','+a.Lima_Beans+','+a.Mushrooms+','+a.Mustard_greens+','+a.Okra+','+a.Onions+','+a.Parsnips+','+a.Peas+','+a.Peppers_hot+','+a.Peppers_sweet+','+a.Potatoes+','+a.Pumpkins+','+a.Purslane+','+a.Radishes+','+a.Rhubarb+','+a.Rutabagas+','+a.Salsify+','+a.Scallions+','+a.Shallots+','+a.Spinach+','+a.Sprouts+','+a.Squash_summer+','+a.Squash_winter+','+a.Sunchokes+','+a.Sweet_potatoes+','+a.Sweet_potato_greens+','+a.Tomatillos+','+a.Tomatoes+','+a.Turnips+','+a.Turnip_greens+','+a.Yacon+'\n';
			}
		}
	}
	return sales_slips_csv;
}


function gen_counts (visitor_counts) {
	
	var visitor_count_csv = ',,Early Visitors,Sample Period 1,,,,,,,,,,Sample Period 2,,,,,,,,,,Sample Period 3,,,,,,,,,,Sample Period 4,,,,,,,,,,Sample Period 5,,,,,,,,,,Sample Period 6,,,,,,,,,,Sample Period 7,,,,,,,,,,Sample Period 8\nMarket Name,Date,In the Market,Entry Point 1,Entry Point 2,Entry Point 3,Entry Point 4,Entry Point 5,Entry Point 6,Entry Point 7,Entry Point 8,Entry Point 9,Entry Point 10,Entry Point 1,Entry Point 2,Entry Point 3,Entry Point 4,Entry Point 5,Entry Point 6,Entry Point 7,Entry Point 8,Entry Point 9,Entry Point 10,Entry Point 1,Entry Point 2,Entry Point 3,Entry Point 4,Entry Point 5,Entry Point 6,Entry Point 7,Entry Point 8,Entry Point 9,Entry Point 10,Entry Point 1,Entry Point 2,Entry Point 3,Entry Point 4,Entry Point 5,Entry Point 6,Entry Point 7,Entry Point 8,Entry Point 9,Entry Point 10,Entry Point 1,Entry Point 2,Entry Point 3,Entry Point 4,Entry Point 5,Entry Point 6,Entry Point 7,Entry Point 8,Entry Point 9,Entry Point 10,Entry Point 1,Entry Point 2,Entry Point 3,Entry Point 4,Entry Point 5,Entry Point 6,Entry Point 7,Entry Point 8,Entry Point 9,Entry Point 10,Entry Point 1,Entry Point 2,Entry Point 3,Entry Point 4,Entry Point 5,Entry Point 6,Entry Point 7,Entry Point 8,Entry Point 9,Entry Point 10,Entry Point 1,Entry Point 2,Entry Point 3,Entry Point 4,Entry Point 5,Entry Point 6,Entry Point 7,Entry Point 8,Entry Point 9,Entry Point 10\n';
	for(var i = 0; i < visitor_counts.length; i++){
		var vci = visitor_counts[i];
		//if(vci.name == null)
		//	continue;

		for(var j = 0; j < vci.points.length; j ++){
			var vcj = vci.points[j];
			if(vcj == undefined)
				break;
			visitor_count_csv += '"'+vci.name+'",'+vci['day'+j] + ',';
			//visitor_count_csv += '"","","",Entry Point 1,Entry Point 2,Entry Point 3,Entry Point 4,'+
			//							'Entry Point 5,Entry Point 6,Entry Point 7,Entry Point 8,\n';
			for(var k = 0; k < vcj.length; k++){
				//visitor_count_csv += (k == 0 ? 'Early Visitors' : ('Sample period: '+k))+ ',';
				if(k == 0){
					visitor_count_csv += (vcj[k][0] ? vcj[k][0].count : '') + ',' ;
				}else{
					for(var l = 0; l < 10; l++){
						visitor_count_csv += (vcj[k][l] ? vcj[k][l].count : '') + ',';
					}
				}
			}
			visitor_count_csv += '\n';
		}	
	}

	return visitor_count_csv;
}

function gen_assistance(data){
	var assistances = data.assistances;
	var assistance_snap = data.assistance_snap;

	var food_assistance_csv = admin ? 'Market Name,Transaction Date,Benefit Type,Last 8 Digits,Amount Redeemed,Zip Code,First Time Using Benefits,Incentive Campaign\n' : 'Transaction Date,Benefit Type,Last 8 Digits,Amount Redeemed,Zip Code,First Time Using Benefits,Incentive Campaign\n';

	for(var i in assistances){
		var a = assistances[i];
		food_assistance_csv += (admin ? a.name+"," : '')+a.transaction_date+","+a.type_of_assistance+","+a.digits_of_snap+","+(a.redeemed ? '$'+a.redeemed : '')+","+a.zip_code+","+(a.first_name ? 1 : 0)+","+a.incentive_campaign+"\n"
	} 

	if(assistance_snap && assistance_snap.length > 0){
		food_assistance_csv += '\n\n,,Metric #18, Metric#19\nMarket,Transaction Date,Unique SNAP Incentive IDs,Repeat SNAP IDs\n';

		for(var i in assistance_snap){
			var a = assistance_snap[i];
			food_assistance_csv += a.name+','+a.transaction_date+','+a.array_length+','+(a.count-a.array_length)+'\n';
		}
	}

	return food_assistance_csv;
}

function gen_credit(credits){
	var credit_debit_csv = admin ? 'Market Name,Transaction Date,Credit Sales,Debit Sales,\n' : 'Transaction Date,Credit Sales,Debit Sales,\n';

	for(var i in credits){
		var a = credits[i];
		credit_debit_csv += (admin ? (a.name+",") : '')+a.transaction_sales+","+(a.credit_sales ?'$'+a.credit_sales:'')+","+(a.debit_sales ?'$'+a.debit_sales:'')+"\n"
	}

	return credit_debit_csv;
} 

function gen_application(applications){
	var visitor_application_csv = (admin ? 'Market Name,Vendor ID' : ',Vendor name')+',Total Gross Sales,Farm Product,Value-added,Ready-to-eat food,Other product,Anticipated 2015 Sales,Primary Location,Secondary Location,Place holder,Total Acres,Owned,Leased,Cultivated/Grazed,Anticipated 2015 Acreage,Seasonal Workers,Year-round Workers,Anticipated 2015 Workers,Total Gross Sales,Farm Product,Value-added,Ready-to-eat food,Other product,Anticipated 2015 Sales,Owner 1 Years, Owner 2 Years, Women-owned, Owner Ethnicity, Owner ≤ 35, Organic,Naturally Grown, Biodynamic, Food Alliance, Other,Products Sold,Place holder,Apples 2014,Apricots 2014,Apriums 2014,Asian Pears 2014,Blackberries 2014,Blueberries 2014,Boysenberries 2014,Canary Melons 2014,Cantaloupes 2014,Cherimoyas 2014,Cherries 2014,Currants 2014,Dates 2014,Feijoas 2014,Figs 2014,Grapefruit 2014,Grapes 2014,Honeydew Melons 2014,Jujubes 2014,Mulberries 2014,PawPaws 2014,Peaches 2014,Pears 2014,Plums 2014,Quince 2014,"Raspberries, Black 2014","Raspberries, Red 2014",Strawberries 2014,Tayberries 2014,Watermelon 2014,Wineberries 2014,Artichokes 2014,Arugula 2014,Asparagus 2014,"Beans, Green 2014","Beans, Dry 2014",Beets 2014,Beet Greens 2014,Bok Choy 2014,Broccoli 2014,Broccoli Rabe 2014,Brussels Sprouts 2014,"Cabbage, Green 2014","Cabbage, Purple 2014",Cardoons 2014,Carrots 2014,Cauliflower 2014,Celeriac 2014,Celery  2014,Chard 2014,Chicory 2014,Chipilin 2014,Collards 2014,"Corn, Sweet 2014",Cress 2014,Cucumbers 2014,Dandelion Greens 2014,Eggplant 2014,Epazote 2014,Fava Beans 2014,Fennel  2014,Garlic Bulb 2014,Garlic Scapes 2014,"Herbs, Fresh 2014",Hierbamora 2014,Horseradish 2014,Jicama 2014,Kale 2014,Kohlrabi 2014,Lambs Quarters 2014,Leeks 2014,Lettuce 2014,Lima Beans 2014,Mesclun (mixed greens) 2014,Mushrooms 2014,Mustard Greens 2014,Okra 2014,Onions 2014,Parsnips 2014,"Peas, English 2014", "Peas, Sugar Snap 2014","Peas, Snow 2014","Pea shoots 2014","Peppers, Hot 2014","Peppers, Sweet Green 2014","Peppers, Sweet Red 2014","Peppers, Sweet Purple 2014","Peppers, Sweet Yellow 2014",Potatoes 2014,Pumpkins 2014,Purslane 2014,Radishes 2014,Rhubarb 2014,Rutabagas 2014,Salsify 2014,Scallions 2014,Shallots 2014,Spinach 2014,Sprouts 2014,"Squash, Summer 2014","Squash, Winter 2014",Sunchokes 2014,Sweet Potatoes 2014,Sweet Potato Greens 2014,Tomatillos 2014,Tomatoes 2014,Turnips 2014,Turnip Greens 2014,Yacon 2014,Chestnuts 2014,Peanuts 2014,"Walnuts, Black 2014","Walnuts, English",Apples 2015,Apricots 2015,Apriums 2015,Asian Pears 2015,Blackberries 2015,Blueberries 2015,Boysenberries 2015,Canary Melons 2015,Cantaloupes 2015,Cherimoyas 2015,Cherries 2015,Currants 2015,Dates 2015,Feijoas 2015,Figs 2015,Grapefruit 2015,Grapes 2015,Honeydew Melons 2015,Jujubes 2015,Mulberries 2015,PawPaws 2015,Peaches 2015,Pears 2015,Plums 2015,Quince 2015,"Raspberries, Black 2015","Raspberries, Red 2015",Strawberries 2015,Tayberries 2015,Watermelon 2015,Wineberries 2015,Artichokes 2015,Arugula 2015,Asparagus 2015,"Beans, Green 2015","Beans, Dry 2015",Beets 2015,Beet Greens 2015,Bok Choy 2015,Broccoli 2015,Broccoli Rabe 2015,Brussels Sprouts 2015,"Cabbage, Green 2015","Cabbage, Purple 2015",Cardoons 2015,Carrots 2015,Cauliflower 2015,Celeriac 2015,Celery  2015,Chard 2015,Chicory 2015,Chipilin 2015,Collards 2015,"Corn, Sweet 2015",Cress 2015,Cucumbers 2015,Dandelion Greens 2015,Eggplant 2015,Epazote 2015,Fava Beans 2015,Fennel  2015,Garlic Bulb 2015,Garlic Scapes 2015,"Herbs, Fresh 2015",Hierbamora 2015,Horseradish 2015,Jicama 2015,Kale 2015,Kohlrabi 2015,Lambs Quarters 2015,Leeks 2015,Lettuce 2015,Lima Beans 2015,Mesclun (mixed greens) 2015,Mushrooms 2015,Mustard Greens 2015,Okra 2015,Onions 2015,Parsnips 2015,"Peas, English 2015", "Peas, Sugar Snap 2015","Peas, Snow 2015","Pea shoots 2015","Peppers, Hot 2015","Peppers, Sweet Green 2015","Peppers, Sweet Red 2015","Peppers, Sweet Purple 2015","Peppers, Sweet Yellow 2015",Potatoes 2015,Pumpkins 2015,Purslane 2015,Radishes 2015,Rhubarb 2015,Rutabagas 2015,Salsify 2015,Scallions 2015,Shallots 2015,Spinach 2015,Sprouts 2015,"Squash, Summer 2015","Squash, Winter 2015",Sunchokes 2015,Sweet Potatoes 2015,Sweet Potato Greens 2015,Tomatillos 2015,Tomatoes 2015,Turnips 2015,Turnip Greens 2015,Yacon 2015,Chestnuts 2015,Peanuts 2015,"Walnuts, Black 2015","Walnuts, English"\n';//1 over

	var ct = 1;
	for(var i in applications){
		var a = applications[i],app = a.application,f = a.first ? a.first : {},l = a.second ? a.second : {};

		visitor_application_csv += (admin ? app.name+','+ct : ','+app.vendor_name)+','+app.total_gross+','+app.farm_sales+','+app.value_sales+','+app.ready_sales+','+app.other_sales+','+app.level_of_sales+',"'+app.primary_loc+'","'+app.secondary_loc+'",,'+(app.acres_owned+app.acres_leased+app.acres_cultivated)+','+app.acres_owned+','+app.acres_leased+','+app.acres_cultivated+','+app.level_of_acres+','+app.workers_seasonal+','+app.workers_yearly+','+app.level_of_worker_anticipation+','+app.total_gross+','+app.farm_sales+','+app.value_sales+','+app.ready_sales+','+app.other_sales+','+app.level_of_sales+','+app.owner1_years+','+app.owner2_years+','+app.owned_by_women+','+('"'+(app.operators_white ? 'white, ' : '')+(app.operators_mexican ? 'mexican, ' : '')+(app.operators_black ? 'black, ' : '')+(app.operators_indian ? 'indian, ' : '')+(app.operators_asian ? 'asian, ' : '')+'"')+','+app.under_35+','+app.certified_organic+','+app.certified_natural+','+app.certified_biodynamic+','+app.certified_food_alliance+',"'+app.certified_other_name+'",'+app.num_certified+',,';
		visitor_application_csv += (f.Apples?1:0)+','+(f.Apricots?1:0)+','+(f.Apriums?1:0)+','+(f.Asian_pears?1:0)+','+(f.Blackberries?1:0)+','+(f.Blueberries?1:0)+','+(f.Boysenberries?1:0)+','+(f.Canary_melons?1:0)+','+(f.Cantaloupes?1:0)+','+(f.Cherimoyas?1:0)+','+(f.Cherries?1:0)+','+(f.Currants?1:0)+','+(f.Dates?1:0)+','+(f.Feijoas?1:0)+','+(f.Figs?1:0)+','+(f.Grapefruit?1:0)+','+(f.Grapes?1:0)+','+(f.Honeydew_melons?1:0)+','+(f.Mulberries?1:0)+','+(f.PawPaws?1:0)+','+(f.Peaches?1:0)+','+(f.Pears?1:0)+','+(f.Plums?1:0)+','+(f.Quince?1:0)+','+(f.Raspberries_black?1:0)+','+(f.Raspberries_red?1:0)+','+(f.Strawberries?1:0)+','+(f.Tayberries?1:0)+','+(f.Watermelon?1:0)+','+(f.Wineberries?1:0)+','+(f.Artichokes?1:0)+','+(f.Arugula?1:0)+','+(f.Asparagus?1:0)+','+(f.Beans_green?1:0)+','+(f.Beans_dry?1:0)+','+(f.Beets?1:0)+','+(f.Beet_greens?1:0)+','+(f.Bok_choy?1:0)+','+(f.Broccoli?1:0)+','+(f.Broccoli_rabe?1:0)+','+(f.Brussels_sprouts?1:0)+','+(f.Cabbage_green?1:0)+','+(f.Cabbage_purple?1:0)+','+(f.Cardoons?1:0)+','+(f.Carrots?1:0)+','+(f.Cauliflower?1:0)+','+(f.Celeriac?1:0)+','+(f.Celery?1:0)+','+(f.Chard?1:0)+','+(f.Chicory?1:0)+','+(f.Chipilín?1:0)+','+(f.Collards?1:0)+','+(f.Corn_Sweet?1:0)+','+(f.Cress?1:0)+','+(f.Cucumbers?1:0)+','+(f.Dandelion_greens?1:0)+','+(f.Eggplant?1:0)+','+(f.Epazote?1:0)+','+(f.Fava_beans?1:0)+','+(f.Fennel?1:0)+','+(f.Garlic_bulb?1:0)+','+(f.Garlic_scapes?1:0)+','+(f.Herbs_fresh?1:0)+','+(f.Hierbamora?1:0)+','+(f.Horseradish?1:0)+','+(f.Jicama?1:0)+','+(f.Jujubes?1:0)+','+(f.Kale?1:0)+','+(f.Kohlrabi?1:0)+','+(f.Lambs_quarters?1:0)+','+(f.Leeks?1:0)+','+(f.Lettuce?1:0)+','+(f.Lima_beans?1:0)+','+(f.Mesclun_mixed_salad_greens?1:0)+','+(f.Mushrooms?1:0)+','+(f.Mustard_greens?1:0)+','+(f.Okra?1:0)+','+(f.Onions?1:0)+','+(f.Parsnips?1:0)+','+(f.Peas_english?1:0)+','+(f.Peas_sugar_snap?1:0)+','+(f.Peas_snow?1:0)+','+(f.Pea_shoots?1:0)+','+(f.Peppers_hot?1:0)+','+(f.Peppers_sweet_green?1:0)+','+(f.Peppers_sweet_red?1:0)+','+(f.Peppers_sweet_purple?1:0)+','+(f.Peppers_sweet_yellow?1:0)+','+(f.Potatoes?1:0)+','+(f.Pumpkins?1:0)+','+(f.Purslane?1:0)+','+(f.Radishes?1:0)+','+(f.Rhubarb?1:0)+','+(f.Rutabagas?1:0)+','+(f.Salsify?1:0)+','+(f.Scallions?1:0)+','+(f.Shallots?1:0)+','+(f.Spinach?1:0)+','+(f.Sprouts?1:0)+','+(f.Squash_aummer?1:0)+','+(f.Squash_winter?1:0)+','+(f.Sunchokes?1:0)+','+(f.Sweet_potatoes?1:0)+','+(f.Sweet_potato_greens?1:0)+','+(f.Tomatillos?1:0)+','+(f.Tomatoes?1:0)+','+(f.Turnips?1:0)+','+(f.Turnip_greens?1:0)+','+(f.Yacon?1:0)+','+(f.Chestnuts?1:0)+','+(f.Peanuts?1:0)+','+(f.Walnuts_black?1:0)+','+(f.Walnuts_english?1:0)+','+(l.Apples?1:0)+','+(l.Apricots?1:0)+','+(l.Apriums?1:0)+','+(l.Asian_pears?1:0)+','+(l.Blackberries?1:0)+','+(l.Blueberries?1:0)+','+(l.Boysenberries?1:0)+','+(l.Canary_melons?1:0)+','+(l.Cantaloupes?1:0)+','+(l.Cherimoyas?1:0)+','+(l.Cherries?1:0)+','+(l.Currants?1:0)+','+(l.Dates?1:0)+','+(l.Feijoas?1:0)+','+(l.Figs?1:0)+','+(l.Grapefruit?1:0)+','+(l.Grapes?1:0)+','+(l.Honeydew_melons?1:0)+','+(l.Mulberries?1:0)+','+(l.PawPaws?1:0)+','+(l.Peaches?1:0)+','+(l.Pears?1:0)+','+(l.Plums?1:0)+','+(l.Quince?1:0)+','+(l.Raspberries_black?1:0)+','+(l.Raspberries_red?1:0)+','+(l.Strawberries?1:0)+','+(l.Tayberries?1:0)+','+(l.Watermelon?1:0)+','+(l.Wineberries?1:0)+','+(l.Artichokes?1:0)+','+(l.Arugula?1:0)+','+(l.Asparagus?1:0)+','+(l.Beans_green?1:0)+','+(l.Beans_dry?1:0)+','+(l.Beets?1:0)+','+(l.Beet_greens?1:0)+','+(l.Bok_choy?1:0)+','+(l.Broccoli?1:0)+','+(l.Broccoli_rabe?1:0)+','+(l.Brussels_sprouts?1:0)+','+(l.Cabbage_green?1:0)+','+(l.Cabbage_purple?1:0)+','+(l.Cardoons?1:0)+','+(l.Carrots?1:0)+','+(l.Cauliflower?1:0)+','+(l.Celeriac?1:0)+','+(l.Celery?1:0)+','+(l.Chard?1:0)+','+(l.Chicory?1:0)+','+(l.Chipilín?1:0)+','+(l.Collards?1:0)+','+(l.Corn_Sweet?1:0)+','+(l.Cress?1:0)+','+(l.Cucumbers?1:0)+','+(l.Dandelion_greens?1:0)+','+(l.Eggplant?1:0)+','+(l.Epazote?1:0)+','+(l.Fava_beans?1:0)+','+(l.Fennel?1:0)+','+(l.Garlic_bulb?1:0)+','+(l.Garlic_scapes?1:0)+','+(l.Herbs_fresh?1:0)+','+(l.Hierbamora?1:0)+','+(l.Horseradish?1:0)+','+(l.Jicama?1:0)+','+(l.Jujubes?1:0)+','+(l.Kale?1:0)+','+(l.Kohlrabi?1:0)+','+(l.Lambs_quarters?1:0)+','+(l.Leeks?1:0)+','+(l.Lettuce?1:0)+','+(l.Lima_beans?1:0)+','+(l.Mesclun_mixed_salad_greens?1:0)+','+(l.Mushrooms?1:0)+','+(l.Mustard_greens?1:0)+','+(l.Okra?1:0)+','+(l.Onions?1:0)+','+(l.Parsnips?1:0)+','+(l.Peas_english?1:0)+','+(l.Peas_sugar_snap?1:0)+','+(l.Peas_snow?1:0)+','+(l.Pea_shoots?1:0)+','+(l.Peppers_hot?1:0)+','+(l.Peppers_sweet_green?1:0)+','+(l.Peppers_sweet_red?1:0)+','+(l.Peppers_sweet_purple?1:0)+','+(l.Peppers_sweet_yellow?1:0)+','+(l.Potatoes?1:0)+','+(l.Pumpkins?1:0)+','+(l.Purslane?1:0)+','+(l.Radishes?1:0)+','+(l.Rhubarb?1:0)+','+(l.Rutabagas?1:0)+','+(l.Salsify?1:0)+','+(l.Scallions?1:0)+','+(l.Shallots?1:0)+','+(l.Spinach?1:0)+','+(l.Sprouts?1:0)+','+(l.Squash_aummer?1:0)+','+(l.Squash_winter?1:0)+','+(l.Sunchokes?1:0)+','+(l.Sweet_potatoes?1:0)+','+(l.Sweet_potato_greens?1:0)+','+(l.Tomatillos?1:0)+','+(l.Tomatoes?1:0)+','+(l.Turnips?1:0)+','+(l.Turnip_greens?1:0)+','+(l.Yacon?1:0)+','+(l.Chestnuts?1:0)+','+(l.Peanuts?1:0)+','+(l.Walnuts_black?1:0)+','+(l.Walnuts_english?1:0)+'\n';
		ct++;
	}

	return visitor_application_csv;
}

function gen_attendance(attendance){
	var attendance_csv = admin ? "Market Name,Business/Farm Name,Week 1,Week 2,Week 3,Week 4,Week 5,Week 6,Week 7,Week 8,Week 9,Week 10,Week 11,Week 12,Week 13,Week 14,Week 15,Week 16,Week 17,Week 18,Week 19,Week 20,Week 21,Week 22,Week 23,Week 24,Week 25,Week 26,Week 27,Week 28,Week 29,Week 30,Week 31,Week 32,Week 33,Week 34,Week 35,Week 36\n" : "Business/Farm Name,Week 1,Week 2,Week 3,Week 4,Week 5,Week 6,Week 7,Week 8,Week 9,Week 10,Week 11,Week 12,Week 13,Week 14,Week 15,Week 16,Week 17,Week 18,Week 19,Week 20,Week 21,Week 22,Week 23,Week 24,Week 25,Week 26,Week 27,Week 28,Week 29,Week 30,Week 31,Week 32,Week 33,Week 34,Week 35,Week 36, Total\n";
	for(var i in attendance){
		var a = attendance[i], sum = 0, line = (admin ? '"'+a.name+'",' : '')+"'"+a.farm_name+"',",k;
		for(var j = 1; j < 37; j++){
			k = a['week'+j] ? 1 : 0;
			sum += k;
			line += k+",";
		}
		line += sum+"\n";
		attendance_csv += line;
	}

	return attendance_csv;
}

function gen_events(events){
	var events_csv = admin ? 'Market Name,Event Date,Youth Specific (Y/N), Total # Participants,# of Participants < 18\n' : 'Event Date,Youth Specific (Y=1/N=0), Total # Participants,# of Participants < 18\n';

	for(var i in events){
		var a = events[i];
		events_csv += (admin ? '"'+a.name+'",' : '')+''+a.event_date+','+(a.youth_specific ? 1 : 0)+','+a.participants+','+a.under_18+'\n';
	}
	return events_csv;
}

function gen_volunteers(volunteers){
	var vol_csv = admin ? 'Market Name,Service Date,First Name/Org Name,Last Name,People Committed,Hours Committed (.25),Assigned Task,# People Attended,Arrival Time,Departure Time,Completed Task,#Hours Volunteered\n' : 'Service Date,First Name/Org Name,Last Name,People Committed,Hours Committed (.25),Assigned Task,# People Attended,Arrival Time,Departure Time,Completed Task,#Hours Volunteered\n';


	console.log(volunteers)
	for(var i in volunteers){
		var a = volunteers[i];
		vol_csv += (admin ? '"'+a.name+'",' : '')+a.service_date+','+a.first+','+a.last+','+a.people_committed+','+a.hours_committed+',"'+a.assigned_task+'",'+a.people_attended+','+a.arrival+','+a.departure+',"'+a.completed_task+'",'+(a.address)+'\n';
	}

	return vol_csv;
}

function gen_metrics(profiles){
	output = '';
	//just say which metric without the entire description on the top
	//then seprate into 2 cols when data from 2 cols
	//don't delete data yet but make sure all instruments are fine!!
	//on all the csvs put '-' instead of null if metric does not apply

	for(var d in profiles){
		var data = profiles[d].data;
		if(!data["2"])
			continue;
		//console.log(d,data);	
		output += 'Market: '+profiles[d].name + '\n\n';

		if(data["1"]){
			output += 'Metric 1: Average number of visitors per market day\n';
			for(var i in data["1"]){
				if(data["1"].day != null)
					output += ','+data["1"].day + ':,' + data["1"].count + '\n';
			}
		}

		if(data["2"]){
			output += '\n\nMetric 2: Total annual vendor sales at market\n';
			output += ','+(data["2"].sales_slip ? data["2"].sales_slip[0].total : '');
		}	

		if(data["3"]){
			output += '\n\nMetric 3: Average distance in miles traveled from product origin (eg. farm) to market (estimated annually)\n';
			output += ',Primary location:,'+data["3"].primary+ ',Secondary location:,' +data["3"].primary+ '\n';
		}

		if(data["4"]){
			output += '\n\nMetric 4: Acres in agricultural production by market vendors\n';
			for(var i in data["4"]){
				',Acres Owned:,'+data["4"].acres_owned+'Acres Leased:,'+data["4"].acres_leased+'Acres Cultivated:,'+data["4"].acres_cultivated+'\n';
			}
		}

		if(data["5"]){
			output += '\n\nMetric 5: Number of vendors who sold through the market at least onec per year\n';
			for(var i in data["5"]){
				',Farm Name:,'+data["5"].farm_name+'\n';
			}
		}	

		if(data["7"]){
			output += '\n\nMetric 7: Dollars spent at neighboring businesses by market shoppers on market days (annual average)\n';
			output += ',$'+data["7"]+'\n';
		}

		if(data["8"]){
			output += '\n\nMetric 8: Dollars amount of credit/debit sales per market day (annual average)\n';
			output += ',Credit Sales:,$'+(data["8"].credit ? data["8"].credit[0].credit : '')+
			',Debit Sales:,$'+(data["8"].credit ? data["8"].credit[0].debit : '')+'\n';
		}

		if(data["9"]){
			output += '\n\nMetric 9: Number of individuals employed by market businesses annually\n';
			output += ',Seasonal Workers:,$'+data["9"].seasonal+',Yearly Workers:,$'+data["9"].yearly+'\n';
		}

		if(data["10"]){
			output += '\n\nMetric 10: Total annual farm vendor sales\n';
			output += ',Sales Slip:,$'+(data["10"].sales_slip ? data["10"].sales_slip[0].farm : '')+
			',Vendor Application:,$'+(data["10"].application ? data["10"].application[0].farm : '')+'\n';
		}

		if(data["11"]){
			output += '\n\nMetric 11: Average total spending per shopper per visit\n';
			output += ',$'+data["11"]+'\n';
		}

		if(data["12"]){
			output += '\n\nMetric 12: Percentage of farm vendors with < 10 years farming experience\n';
			output += ',Owner 1:,'+data["12"]["1"]+',Owner 2:,'+data["12"]["2"]+'\n';
		}

		if(data["13"]){
			output += '\n\nMetric 13: Percent of customers who were first time visitors\n';
			for(var i in data["13"]){
				output += ',Date:,'+data["13"][i].date+',Total:,'+data["13"][i].sum+'\n';
			}
		}

		if(data["14"]){
			output += '\n\nMetric 14: Average number of SNAP transactions per month\n';
			output += ',Sales Slip:,April,May,June,July,August,September\n';
			output += ',,'+data["14"].slips.april[0].sum+','+data["14"].slips.may[0].sum+','+data["14"].slips.june[0].sum+','+data["14"].slips.july[0].sum+','+data["14"].slips.august[0].sum+','+data["14"].slips.september[0].sum+'\n';
			output += ',Food Assistance:,April,May,June,July,August,September\n';
			output += ',,'+data["14"].assistance.april+','+data["14"].assistance.may+','+data["14"].assistance.june+','+data["14"].assistance.july+','+data["14"].assistance.august+','+data["14"].assistance.september+'\n';
		}

		if(data["15"]){
			output += '\n\nMetric 15: Total dollar amount of SNAP Benefits redeemed annually\n';
			output += ',Sales Slips:,'+data["15"].slips[0].sum+',Food Assistance:,'+data["15"].assistance[0].sum+'\n';
		}

		if(data["16"]){
			output += '\n\nMetric 16: Total dollar amount of WIC FMNP redeemed annually\n';
			output += ',Sales Slips:,'+data["16"].slips[0].sum+',Food Assistance:,'+data["16"].assistance[0].sum+'\n';
		}

		if(data["17"]){
			output += '\n\nMetric 17: Total dollar amount of WIC/CVV redeemed annually\n';
			output += ',Sales Slips:,'+data["17"].slips[0].sum+',Food Assistance:,'+data["17"].assistance[0].sum+'\n';
		}

		if(data["18"]){
			//check this one with real data
			output += '\n\nMetric 18: Number of SNAP customers participating in incentive campaign monthly\n';
			output += ',April,May,June,July,August,September\n';
			output += ','+(data["18"].april.length)+
						','+(data["18"].may.length)+
						','+(data["18"].june.length)+
						','+(data["18"].july.length)+
						','+(data["18"].august.length)+
						','+(data["18"].september.length)+'\n';
		}

		//skipping 19 for now but do it later

		if(data["21"]){
			output += '\n\nMetric 21: Total dollar amount of senior FMNP redeemed annually\n';
			output += ',Sales Slips:,'+data["21"].slips[0].sum+',Food Assistance:,'+data["21"].assistance[0].sum+'\n';
		}

		if(data["22"]){
			output += '\n\nMetric 22: Number or percentage of Women-owned producer businesses selling\nat least once at the market (estimated annually)\n';
			output += ',Total:,'+data["22"]+'\n';
		}

		//skipping 23 for now and 24 doesn't exist

		if(data["25"]){
			output += '\n\nMetric 25: Number of farm vendors with organic certification (or in 3 year\ntransition) selling at market (estimated annually)\n';
			output += ',Total:,'+data["25"]+'\n';
		}

		if(data["26"]){
			output += '\n\nMetric 26: Number of farm products sold as Certified Organic or certified by other\nthird-party sustainability criteria (estimated annually)\n';
			output += ',Total:,'+data["26"][0].sum+'\n';
		}

		if(data["27"]){
			output += '\n\nMetric 27: Number of different fruit and vegetable crops available for sale annually\n';
			output += ',Total:,'+(data["27"] > 0 ? data["27"] : 0)+'\n';
		}

		if(data["28"]){
			output += '\n\nMetric 28: Percentage of shoppers walking bicycling, carpooling, driving or\ntaking public transportation to the market (estimated annually)\n';
			output += ',Percentage:,'+data["28"]+'%\n';
		}

		if(data["29"]){
			output += '\n\nMetric 29: Percentage of agricultural producers at market who are < 35 years old\n(estimated annually)\n';
			output += ',Percentage:,'+data["29"][0].sum+'%\n';
		}


		if(data["30"]){
			output += '\n\nMetric 30: Number of volunteer hours contributed (estimated annually)\n';
			output += ',Entered:,'+data["30"].sum+',Committed,'+data["30"].committed+'\n';
		}

		if(data["31"]){
			output += '\n\nMetric 31: Percentage of shoppers from represented zip codes (estimated annually)\n';
			for(var i in data["31"]){
				output += ',date:,'+data["31"][i].date+',count:,'+data["31"][i].count+',zip:,'+data["31"][i].home_zip+'\n';
			}
		}

		if(data["32"]){
			output += '\n\nMetric 32: Pounds or retail value of food donated by vendors (estimated\nannually)\n';
			output += ',pounds:,'+data["32"].pounds[0].sum+',Value:,$'+data["32"].value[0].sum+'\n';
		}

		if(data["33"]){
			output += '\n\nMetric 33: Number of food education programs held (including cooking\ndemonstrations) (estimated annually)\n';
			output += ',Total:,'+data["33"]+'\n';
		}

		//34 an 35 don't exist

		if(data["36"]){
			output += '\n\nMetric 36: Most frequently sold fruit or vegetables (estimated monthly)\n';
			for(var i in data["36"]){
				output += ','+i+':,'+data["36"][i]+'\n';
			}
		}

		if(data["37"]){
			output += '\n\nMetric 37: Number of youth < 18 participating in market programs annually\n';
			output += data["37"][0].sum+'\n';
		}

		output += '\n\n\n\n';
	}

	return output;
}

var csvs = {
	'profileDoc' : {
		index : 1,
		funct : gen_profiles,
		download : 'Profiles.csv'
	},
	'visitor_surveys' : {
		index : 2,
		funct : gen_surveys,
		download : 'VisitorSurveys.csv'
	}, 
	'visitor_counts' : {
		index : 3,
		funct : gen_counts,
		download : 'VisitorCounts.csv'
	},
	'sales_slips' : {
		index : 4,
		funct : gen_slips,
		download : 'SalesSlips.csv'
	},
	'food_assistance' : {
		index : 5,
		funct : gen_assistance,
		download : 'FoodAssistance.csv'
	},
	'credit_debit' : {
		index : 6,
		funct : gen_credit,
		download : 'CreditDebit.csv'
	},
	'visitor_application'  : {
		index : 7,
		funct : gen_application,
		download : 'VisitorApplication.csv'
	},
	'vendor_attendance'  : {
		index : 8,
		funct : gen_attendance,
		download : 'Attendance.csv'
	},
	'market_events' : {
		index : 9,
		funct : gen_events,
		download : 'Events.csv'
	},
	'volunteers' : {
		index : 10,
		funct : gen_volunteers,
		download : 'Volunteers.csv'
	},
	'metrics' : {
		index : 11,
		funct : gen_metrics,
		download : 'Metrics.csv'
	}
}

function displayCtrl($scope){

	$scope.profile = <%= raw(@profile.to_json) %>;
	$scope.mars = <%= raw(@markets.to_json) %>;
	$scope.user = <%= raw(@user.to_json) %>;

	var seasonalArr = [1,1,1];
	var num;

	$scope.markets = [[null,null,null],[null,null,null],[null,null,null]];

	if($scope.mars != null)
		$scope.mars.forEach(function(entry){
			num = entry.market_num - 1;
			if(entry.market_type == "market")
				$scope.markets[num][0] = entry;
			else if(entry.market_type == "seasonal"){
				if($scope.markets[num][1] == null)
					$scope.markets[num][1] = entry;
				else
					$scope.markets[num][2] = entry;
			}
		});

	//console.log($scope.markets);


	$scope.slide = function(id) {
	  	if ($(id).is(":hidden")) {
	    	$(id).slideDown("slow");
	  	}else{
	    	$(id).slideUp("slow");
	  	}
	};

	$scope.selectFile = function(){

		var csv = csvs[$scope.csv];
		$.get('/csv/'+csv.index, function(data){
			var csv1 = document.createElement('a');
			var file = csv.funct(JSON.parse(data)); 

			csv1.setAttribute('href', 'data:text/csv;charset=utf-8,' + encodeURIComponent(file));
			csv1.setAttribute('download', csv.download);
			csv1.click();
		});
	}

}
</script>
